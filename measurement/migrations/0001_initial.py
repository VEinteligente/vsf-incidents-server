# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-10-03 12:57
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input', models.CharField(max_length=50, null=True)),
                ('annotations', django.contrib.postgres.fields.jsonb.JSONField()),
                ('report_id', models.CharField(max_length=100)),
                ('report_filename', models.CharField(max_length=250)),
                ('options', models.TextField(null=True)),
                ('probe_cc', models.CharField(max_length=50)),
                ('probe_asn', models.CharField(max_length=50)),
                ('probe_ip', models.GenericIPAddressField()),
                ('data_format_version', models.CharField(max_length=10)),
                ('test_name', models.CharField(max_length=50)),
                ('test_start_time', models.DateTimeField()),
                ('measurement_start_time', models.DateTimeField()),
                ('test_runtime', models.FloatField()),
                ('test_helpers', models.TextField(null=True)),
                ('test_keys', django.contrib.postgres.fields.jsonb.JSONField()),
                ('software_name', models.CharField(max_length=15)),
                ('software_version', models.CharField(max_length=10)),
                ('test_version', models.CharField(max_length=10)),
                ('bucket_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'metrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DNSServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbose', models.CharField(max_length=50)),
                ('ip', models.GenericIPAddressField()),
                ('public', models.BooleanField(default=True)),
                ('isp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.ISP', verbose_name='Operadora')),
            ],
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('metric_date', models.DateTimeField()),
                ('plugin_name', models.CharField(blank=True, max_length=100, null=True)),
                ('flag', models.CharField(choices=[('hard', 'Hard'), ('muted', 'Muted'), ('none', 'None'), ('soft', 'Soft')], db_index=True, default='none', max_length=10)),
                ('manual_flag', models.BooleanField(db_index=True, default=False)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='event.Event')),
                ('isp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='event.ISP')),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.CharField(max_length=200, unique=True)),
                ('input', models.CharField(db_index=True, max_length=50, null=True)),
                ('annotations', django.contrib.postgres.fields.jsonb.JSONField()),
                ('report_id', models.CharField(db_index=True, max_length=100)),
                ('report_filename', models.CharField(max_length=250)),
                ('options', models.TextField(null=True)),
                ('probe_cc', models.CharField(max_length=50)),
                ('probe_asn', models.CharField(max_length=50)),
                ('probe_ip', models.GenericIPAddressField()),
                ('data_format_version', models.CharField(max_length=10)),
                ('test_name', models.CharField(db_index=True, max_length=50)),
                ('test_start_time', models.DateTimeField()),
                ('measurement_start_time', models.DateTimeField(db_index=True)),
                ('test_runtime', models.FloatField()),
                ('test_helpers', models.TextField(null=True)),
                ('test_keys', django.contrib.postgres.fields.jsonb.JSONField()),
                ('software_name', models.CharField(max_length=15)),
                ('software_version', models.CharField(max_length=10)),
                ('test_version', models.CharField(db_index=True, max_length=10)),
                ('bucket_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Probe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification', models.CharField(max_length=50, unique=True, verbose_name='Probe Identification')),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.ForeignKey(blank=True, default=231, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='probes', to='event.Country')),
                ('isp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='event.ISP')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='probes', to='event.Plan')),
                ('region', models.ForeignKey(blank=True, default=3718, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='probes', to='event.State')),
            ],
        ),
        migrations.AddField(
            model_name='metric',
            name='probe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='measurement.Probe'),
        ),
        migrations.AddField(
            model_name='flag',
            name='metric',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='measurement.Metric'),
        ),
        migrations.AddField(
            model_name='flag',
            name='suggested_events',
            field=models.ManyToManyField(blank=True, related_name='suggested_flags', to='event.Event'),
        ),
        migrations.AddField(
            model_name='flag',
            name='target',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='event.Target'),
        ),
        migrations.AlterIndexTogether(
            name='metric',
            index_together=set([('test_version', 'measurement_start_time')]),
        ),
        migrations.AlterIndexTogether(
            name='flag',
            index_together=set([('manual_flag', 'flag'), ('flag', 'manual_flag')]),
        ),
    ]
